package jpabook.jpashop.domain.item;

import java.util.ArrayList;
import java.util.List;

import jakarta.persistence.Column;
import jakarta.persistence.DiscriminatorColumn;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.Inheritance;
import jakarta.persistence.InheritanceType;
import jakarta.persistence.ManyToMany;
import jpabook.jpashop.domain.Category;
import jpabook.jpashop.exception.NotEnoughStockException;
import lombok.Getter;
import lombok.Setter;

// 추상클래스
@Entity
@Getter
@Setter
//상속된 객체들이 있어 사용한다
// InheritanceType 종류는
// 1. Joined (정교한 스타일 사용)
// 2. Single_table (한 테이블에 다 때려박는 것)
// 객체에는 상속관계가 존재하지만 테이블에는 존재하지 않기 때문에 사용한다
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
// 부모테이블에 사용한다 (name = "dtype")은 default
// 테이블 생성 시 부모 테이블이라는 표식인 dtype이 컬럼에 생긴다
@DiscriminatorColumn(name = "dtype")
public abstract class Item {

	@Id
	@GeneratedValue
	@Column(name = "item_id")
	private Long id;
	
	private String name;
	
	private int price;
	
	private int stockQuantity;
	
	@ManyToMany(mappedBy = "items")
	private List<Category> categories = new ArrayList<>();
	
	// increase Stock
	
	// 비즈니스 로직
	public void addStock(int quantity) {
		this.stockQuantity = quantity;
	}
	
	// remove Stock
	
		// 비즈니스 로직
		public void removeStock(int quantity) {
			int reststock = this.stockQuantity - quantity;
			if (reststock < 0) {
				throw new NotEnoughStockException("need more stock");
			}
		}
}
